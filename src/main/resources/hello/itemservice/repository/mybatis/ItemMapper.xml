<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hello.itemservice.repository.mybatis.ItemMapper">

<!--    #{} 문법을 사용 시 PreparedStatement 를 사용하며, JDBC 의 ? 치환으로 생각하면 된다. -->
<!--    useGeneratedKeys 같은 경우 generated by default as identity 같은 IDENTITY 전략일 때 사용하는 대리 키 방식 -->
<!--    keyProperty 의 경우 생성되는 키의 속성 이름을 지정하면 된다. -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into item (item_name, price, quantity)
        values (#{itemName}, #{price}, #{quantity})
    </insert>

    <update id="update">
        update item
        set item_name=#{updateParam.itemName},
            price=#{updateParam.price},
            quantity=#{updateParam.quantity}
        where id = #{id}
    </update>

<!--    원래 resultType 은 hello.itemservice.domain 패키지를 전부 다 적어줘야 함 -->
<!--    현재는 properties 환경설정에 패키지 경로를 매핑 해뒀기에 객체 명으로 사용할 수 있음 -->
    <select id="findById" resultType="Item">
        select id, item_name, price, quantity
        from item
        where id = #{id}
    </select>

<!--    동적 쿼리의 경우 where 부분의 and 를 where 로 치환해준다. -->
<!--    select * from item and item_name 같은 방식은 문법 오류이기 때문에 -->
<!--    select * from item where item_name 같이 자동으로 치환해주는 방식 -->
<!--    XML 의 특수문자의 경우 (< , > , &) 같은 문법을 사용할 수 없기에 XML 에서 지원하는 CDATA 구문 문법이나 특수문자를 사용해야 한다. -->
<!--    XML 에서 TAG 가 시작하거나 종료할 때 <> 와 같은 특수문자를 사용하기 때문이다. -->
<!--    < : &lt; -->
<!--    > : &gt; -->
<!--    & : &amp; -->
    <select id="findAll" resultType="Item">
        select id, item_name, price ,quantity
        from item
        <where>
            <if test="itemName != null and itemName != ''">
                and item_name like concat('%', #{itemName}, '%')
            </if>
            <if test="maxPrice != null">
                and price &lt;= #{maxPrice}
            </if>
        </where>
    </select>

</mapper>